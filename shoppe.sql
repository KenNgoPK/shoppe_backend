USE Shoppe;

CREATE TABLE USERS (
    UserId VARCHAR(20) PRIMARY KEY,
    UserName VARCHAR(20) NOT NULL,
    Email VARCHAR(50) NOT NULL,
    Phone VARCHAR(15) NOT NULL,
    Address TEXT,
    Gender ENUM('MALE', 'FEMALE', '3RD GENDER') NOT NULL,
    DayOfBirthday DATE NOT NULL,
    Status ENUM('Active', 'Inactive', 'Banned') DEFAULT 'Active' NOT NULL,
    Password VARCHAR(100) NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE CATEGORIES (
    CategoryId VARCHAR(20) PRIMARY KEY,
    ParentCategoryId VARCHAR(20),
    CategoryName VARCHAR(50) NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE SHOPS (
    ShopId VARCHAR(20) PRIMARY KEY,
    ShopName VARCHAR(50) NOT NULL,
    ShopDescription VARCHAR(50),
    ShopCouponId VARCHAR(20),
    Follower INT DEFAULT 0,
    Rating DECIMAL(2,1) DEFAULT 0.0,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ShopCouponId) REFERENCES SHOPCOUPON(ShopCouponId)
);

CREATE TABLE PRODUCTS (
    ProductId VARCHAR(30) PRIMARY KEY,
    CategoryId VARCHAR(20) NOT NULL,
    ShopId VARCHAR(30) NOT NULL,
    ProductName VARCHAR(50) NOT NULL,
    ProductCode VARCHAR(50) NOT NULL,
    Title VARCHAR(50) NOT NULL,
    Description VARCHAR(100) NOT NULL,
    Price DECIMAL(10, 3) NOT NULL,
    Stock INT NOT NULL,
    Rating DECIMAL(2,1) DEFAULT 0.0,
    TotalReview INT DEFAULT 0,
    Likes INT DEFAULT 0,
    DiscountPercent DECIMAL(5,2) DEFAULT 0.00,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (CategoryId) REFERENCES CATEGORIES(CategoryId),
    FOREIGN KEY (ShopId) REFERENCES SHOPS(ShopId)
);

CREATE TABLE CART (
    CartId VARCHAR(20) PRIMARY KEY,
    UserId VARCHAR(20) NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (UserId) REFERENCES USERS(UserId)
);

CREATE TABLE CART_DETAIL (
    CartId VARCHAR(20) NOT NULL,
    ProductId VARCHAR(20) NOT NULL,
    Quantity INT NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (CartId, ProductId),
    FOREIGN KEY (CartId) REFERENCES CART(CartId),
    FOREIGN KEY (ProductId) REFERENCES PRODUCTS(ProductId)
);

CREATE TABLE REVIEWS (
    ReviewId VARCHAR(20) PRIMARY KEY,
    UserId VARCHAR(20) NOT NULL,
    ProductId VARCHAR(30) NOT NULL,
    Rating DECIMAL(2,1) NOT NULL,
    Comment VARCHAR(1000) NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (UserId) REFERENCES USERS(UserId),
    FOREIGN KEY (ProductId) REFERENCES PRODUCTS(ProductId)
);

CREATE TABLE ROLE (
    RoleId VARCHAR(20) PRIMARY KEY,
    RoleName VARCHAR(20) NOT NULL
);

CREATE TABLE USER_ROLE (
    UserId VARCHAR(20) NOT NULL,
    RoleId VARCHAR(20) NOT NULL,
    PRIMARY KEY (UserId, RoleId),
    FOREIGN KEY (UserId) REFERENCES USERS(UserId),
    FOREIGN KEY (RoleId) REFERENCES ROLE(RoleId)
);

CREATE TABLE MAINCOUPON (
    CouponId VARCHAR(20) PRIMARY KEY,
    CouponCode VARCHAR(20) NOT NULL,
    Discount DECIMAL(5,2) NOT NULL,
    ExpiryDate DATETIME,
    MinTotalAmount DECIMAL(10,3),
    Status ENUM('Active', 'Inactive', 'Expired') DEFAULT 'Active',
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE SHOPCOUPON (
    ShopCouponId VARCHAR(20) PRIMARY KEY,
    ShopCouponCode VARCHAR(20) NOT NULL,
    Discount DECIMAL(5,2) NOT NULL,
    ExpiryDate DATETIME,
    MinTotalAmount DECIMAL(10,3),
    Status ENUM('Active', 'Inactive', 'Expired') DEFAULT 'Active',
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE ORDERS (
    OrderId VARCHAR(20) PRIMARY KEY,
    UserId VARCHAR(20) NOT NULL,
    TotalPrice DECIMAL(10, 2) NOT NULL,
    CouponId VARCHAR(20),
    ShopCouponId VARCHAR(20),
    Status ENUM('pending', 'paid', 'shipped', 'delivered', 'cancelled') DEFAULT 'pending',
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (UserId) REFERENCES USERS(UserId),
    FOREIGN KEY (CouponId) REFERENCES MAINCOUPON(CouponId),
    FOREIGN KEY (ShopCouponId) REFERENCES SHOPCOUPON(ShopCouponId)
);

CREATE TABLE ORDER_DETAIL (
    OrderId VARCHAR(20) NOT NULL,
    ProductId VARCHAR(20) NOT NULL,
    Quantity INT NOT NULL DEFAULT 1,
    Price DECIMAL(10,2) NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (OrderId, ProductId),
    FOREIGN KEY (OrderId) REFERENCES ORDERS(OrderId),
    FOREIGN KEY (ProductId) REFERENCES PRODUCTS(ProductId)
);

CREATE TABLE SHIPPING (
    ShippingId VARCHAR(20) PRIMARY KEY,
    OrderId VARCHAR(20) NOT NULL,
    Address TEXT,
    ShippingStatus ENUM('pending', 'in_transit', 'delivered', 'returned') DEFAULT 'pending',
    EstimatedDeliveryDates DATE,
    ShippingMethod ENUM('normal', 'fast', 'super_fast', 'save') DEFAULT 'normal' NOT NULL,
    TrackingNumber VARCHAR(50),
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UpdatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (OrderId) REFERENCES ORDERS(OrderId)
);

CREATE TABLE PAYMENT (
    PaymentId VARCHAR(20) PRIMARY KEY,
    OrderId VARCHAR(20) NOT NULL,
    Price INT NOT NULL,
    PaymentMethod ENUM('credit_card', 'bank_transfer', 'cash_on_delivery', 'e_wallet') NOT NULL,
    PaymentStatus ENUM('pending', 'completed', 'failed') DEFAULT 'pending',
    PaymentDate TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (OrderId) REFERENCES ORDERS(OrderId)
);


CREATE TABLE AUDITLOG (
	LogId VARCHAR(20) PRIMARY KEY,
	UserId VARCHAR(20) NOT NULL,
	Action TEXT NOT NULL,
	Timestamp DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
	FOREIGN KEY (UserId) REFERENCES USERS(UserId)
);

CREATE TABLE WISHLIST (
    WishlistId VARCHAR(20) PRIMARY KEY,
    UserId VARCHAR(20) NOT NULL,
    ProductId VARCHAR(20) NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


